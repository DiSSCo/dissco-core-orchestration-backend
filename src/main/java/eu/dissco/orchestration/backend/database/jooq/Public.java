/*
 * This file is generated by jOOQ.
 */
package eu.dissco.orchestration.backend.database.jooq;


import eu.dissco.orchestration.backend.database.jooq.tables.DataMapping;
import eu.dissco.orchestration.backend.database.jooq.tables.MachineAnnotationServices;
import eu.dissco.orchestration.backend.database.jooq.tables.Mapping;
import eu.dissco.orchestration.backend.database.jooq.tables.NewMachineAnnotationServices;
import eu.dissco.orchestration.backend.database.jooq.tables.NewSourceSystem;
import eu.dissco.orchestration.backend.database.jooq.tables.SourceSystem;
import java.util.Arrays;
import java.util.List;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Public extends SchemaImpl {

  /**
   * The reference instance of <code>public</code>
   */
  public static final Public PUBLIC = new Public();
  private static final long serialVersionUID = 1L;
  /**
   * The table <code>public.data_mapping</code>.
   */
  public final DataMapping DATA_MAPPING = DataMapping.DATA_MAPPING;

  /**
   * The table <code>public.machine_annotation_services</code>.
   */
  public final MachineAnnotationServices MACHINE_ANNOTATION_SERVICES = MachineAnnotationServices.MACHINE_ANNOTATION_SERVICES;

  /**
   * The table <code>public.mapping</code>.
   */
  public final Mapping MAPPING = Mapping.MAPPING;

  /**
   * The table <code>public.new_machine_annotation_services</code>.
   */
  public final NewMachineAnnotationServices NEW_MACHINE_ANNOTATION_SERVICES = NewMachineAnnotationServices.NEW_MACHINE_ANNOTATION_SERVICES;

  /**
   * The table <code>public.new_source_system</code>.
   */
  public final NewSourceSystem NEW_SOURCE_SYSTEM = NewSourceSystem.NEW_SOURCE_SYSTEM;

  /**
   * The table <code>public.source_system</code>.
   */
  public final SourceSystem SOURCE_SYSTEM = SourceSystem.SOURCE_SYSTEM;

  /**
   * No further instances allowed
   */
  private Public() {
    super("public", null);
  }


  @Override
  public Catalog getCatalog() {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Table<?>> getTables() {
    return Arrays.asList(
        DataMapping.DATA_MAPPING,
        MachineAnnotationServices.MACHINE_ANNOTATION_SERVICES,
        Mapping.MAPPING,
        NewMachineAnnotationServices.NEW_MACHINE_ANNOTATION_SERVICES,
        NewSourceSystem.NEW_SOURCE_SYSTEM,
        SourceSystem.SOURCE_SYSTEM
    );
  }
}
